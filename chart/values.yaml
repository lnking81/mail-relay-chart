# Default values for mail-relay.
# This is a YAML-formatted file.

# Image configuration
image:
  repository: ghcr.io/lnking81/mail-relay-chart
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Service configuration
service:
  type: ClusterIP
  ports:
    smtp:
      port: 25
      targetPort: 25
      protocol: TCP

# External DNS configuration
externalDns:
  enabled: true
  ttl: 300

  # Owner ID for external-dns - should match your external-dns installation
  # Common values: "k8s-cluster-external-dns", "external-dns", or cluster-specific IDs
  # Set this to match your external-dns configuration's --txt-owner-id parameter
  ownerId: "k8s-cluster-external-dns"

  # Additional annotations for external-dns
  annotations: {}

  # Automated DNS record management
  autoManageDnsRecords: false # Set to true to auto-create SPF/DKIM/DMARC records with detected IP
  autoCreateDmarc: true # Create DMARC records when autoManageDnsRecords is enabled
  dmarcPolicy: "v=DMARC1; p=none; rua=mailto:postmaster@" # DMARC policy (domain will be appended)

  # Check interval for IP changes (minutes) - only used when ipDetection is true
  ipCheckInterval: 5

# DNS Helper configuration
dnsHelper:
  # Create helper scripts and documentation
  enabled: true

  # IP Detection configuration (deprecated: use top-level ipDetection/externalIps)
  ipDetection: true # Set to false to disable automatic IP detection
  # Manual external IPs (deprecated: prefer top-level externalIps)
  # When specified, these IPs will be used instead of auto-detected IP
  externalIps: []
  # Example:
  # externalIps:
  #   - "203.0.113.1"
  #   - "203.0.113.2"

# Mail configuration
mail:
  hostname: "mail.example.com"
  domains:
    - name: "example.com"
      dkimSelector: "mail"
      # Optional: Provide existing DKIM keys for this domain
      # dkim:
      #   privateKey: |
      #     -----BEGIN RSA PRIVATE KEY-----
      #     ...base64 encoded private key...
      #     -----END RSA PRIVATE KEY-----
      #   publicKey: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQE..."
      #   dnsRecord: "v=DKIM1;h=sha256;k=rsa;p=MIIBIjANBgkqhkiG..."
      #   selector: "mail"  # Override default selector for this domain

  smtp:
    tlsSecurityLevel: "may"

  # Relay configuration
  relayHost: "" # External SMTP relay host (optional)
  relayPort: 587
  relayCredentials:
    enabled: false
    username: ""
    password: ""
    existingSecret: ""
    usernameKey: "username"
    passwordKey: "password"

  # Trusted networks/hosts that can send mail through this relay
  trustedNetworks:
    - "127.0.0.0/8" # Localhost
    - "10.0.0.0/8" # Private network
    - "172.16.0.0/12" # Docker default
    - "192.168.0.0/16" # Private network

  # Additional trusted IPs (from your history)
  trustedIPs: []

  # Message size limit (in bytes)
  messageSizeLimit: "50MB"

# DKIM configuration
dkim:
  enabled: true
  # Key size in bits
  keySize: 2048
  # Automatically generate DKIM keys if they don't exist
  autoGenerate: true
  # Existing secret containing DKIM keys (optional)
  existingSecret: ""
  # Preserve DKIM secrets when helm release is deleted (set to false for complete cleanup)
  preserveSecretsOnDelete: false

# Persistence
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 1Gi
  # Existing PVC name (optional)
  existingClaim: ""

# Security context
securityContext:
  runAsNonRoot: false
  runAsUser: 0

podSecurityContext:
  runAsNonRoot: false
  runAsUser: 0
  fsGroup: 0

# Resources
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Service account
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  name: ""

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Network policy
networkPolicy:
  enabled: true
  ingress:
    # Allow ingress from trusted networks
    allowedCIDRs:
      - "10.0.0.0/8"
      - "172.16.0.0/12"
      - "192.168.0.0/16"

# Monitoring
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    namespace: ""
    labels: {}
    interval: 30s

# Health checks
healthCheck:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
